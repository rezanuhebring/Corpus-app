services:
  backend:
    build: ./backend
    container_name: corpus_backend
    env_file: .env
    volumes:
      - ./backend:/app
      - corpus_files:/app/corpus_files
    # The --reload flag is removed to ensure a clean startup
    command: uvicorn app.main:app --host 0.0.0.0 --port 8000
    depends_on:
      elasticsearch:
        condition: service_healthy
    networks:
      - corpus-net

  elasticsearch:
    image: docker.elastic.co/elasticsearch/elasticsearch:8.10.4
    container_name: corpus_elasticsearch
    environment:
      # Use single-node discovery mode
      - discovery.type=single-node
      # Bind to all network interfaces to be accessible by other containers
      - http.host=0.0.0.0
      # Standard memory settings
      - "ES_JAVA_OPTS=-Xms1g -Xmx1g"
      # Disable security for development
      - xpack.security.enabled=false
    volumes:
      - esdata:/usr/share/elasticsearch/data
    ports:
      - "9200:9200"
    healthcheck:
      # This healthcheck ensures the service is actually ready
      test: "curl -s -f http://localhost:9200/_cluster/health?wait_for_status=yellow&timeout=10s || exit 1"
      interval: 15s
      timeout: 10s
      retries: 10
      start_period: 30s
    networks:
      - corpus-net
  
  frontend:
    build:
      context: ./frontend
      dockerfile: Dockerfile
    container_name: corpus_frontend
    volumes:
      - ./frontend/src:/app/src
      - ./frontend/public:/app/public
    environment:
      - NODE_ENV=development
      - HOST=0.0.0.0
      - DANGEROUSLY_DISABLE_HOST_CHECK=true
      - WDS_SOCKET_PATH=/ws
    networks:
      - corpus-net

  nginx:
    build: ./nginx
    container_name: corpus_nginx
    ports:
      - "8080:80"
      - "443:443"
    volumes:
      - ./nginx/default.conf:/etc/nginx/conf.d/default.conf
    depends_on:
      - backend
      - frontend
    networks:
      - corpus-net

  certbot:
    image: certbot/certbot
    container_name: corpus_certbot
    volumes:
      - certbot_www:/var/www/certbot
      - certbot_conf:/etc/letsencrypt
    networks:
      - corpus-net

networks:
  corpus-net:
    driver: bridge

volumes:
  esdata:
  corpus_files:
  certbot_www:
  certbot_conf: